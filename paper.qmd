---
title: "Filling in data gaps on refugee children: Statistical imputation for missing count data"
author: Jan Beise, Yukun Pei (UNICEF); Sebastian Steinmueller (UNHCR)
abstract: UNHCR's annually published population dataset with the number of refugees and their age/sex composition by country of origin and country of asylum contained missing age data for 23 per cent of the global refugee populations at end-2021. Figures of the global proportion of refugees who are children disseminated to date used the available data only. We show that this approach likely leads to an upward biased estimate of the global proportion of children due to the omission of refugee groups in the Americas and Europe with lower proportions of children. We propose a multilevel Bayesian model to create a dataset with multiple imputations of age/sex counts for country pairs with missing data, resulting in standardisation of global and regional estimates by countries of origin and regions of asylum. The estimate of the proportion of children in the global refugee population derived from the imputed dataset is 42 per cent compared to 47 per cent in the available-data figure. 
format: pdf
bibliography: references.bib
execute:
  echo: false
  warning: false
  message: false
header-includes:
    \usepackage{float}
    \usepackage{setspace}
    \onehalfspacing
toc: true
lof: true
lot: true
---

---
nocite: | 
    @wpp2022, @irrs
---


```{r}
#| include: false
#| 
##### I. Read data, packages etc ##### 

### packages
library(tidyverse)
library(stringi)
library(gt)
library(ggplot2)
library(patchwork)
library(scales)
library(ggdist)
library(tidybayes)
library(brms)
library(equatiomatic)

### read datasets
load("data/dem_refvda_end2021.RData")
imputations <- readRDS("output/imputations200.rds")

### read brms fit object
m.ageonly <- readRDS("models/m.ageonly.rds")

## colours (https://intranet.unhcr.org/content/dam/unhcr/intranet/staff%20support/strategic/documents/english/brand-book/UNHCR-Brand%20Book.pdf)
unhcrPaletteBlue <- c("#0072BC", "#338EC9", "#66AAD7", "#99C7E4", "#CCE3F2")
unhcrPaletteBlack <- c("#000000", "#333333", "#666666", "#999999", "#CCCCCC")
unhcrPaletteYellow <- c("#FAEB00", "#FBEF33", "#FCF366", "#FDF799", "#FEFBCC")
unhcrPaletteWhite <- c("#FFFFFF")
unhcrPaletteRed <- c("#E73451")
unhcrPaletteGreen <- c("#00AB92")


##### II. Plot hierarchies and covariates ##### 

# Calculate the proportions of children and girls/women
dem_longMissing <- dem_longMissing %>%
  mutate(childrenProp = children/total,
         femaleProp = female/total,
         missingAge = case_when(
              missing == "none" ~ "Age not missing",
              missing != "none" ~ "Age missing" 
            ),
         origin_countryShort = case_when(
              origin_country == "Venezuela (Bolivarian Republic of)" ~ "Venezuela" ,
              origin_country == "United Kingdom of Great Britain and Northern Ireland" ~ "UK",
              origin_country == "Bolivia (Plurinational State of)" ~ "Bolivia",
              origin_country == "Central African Republic" ~ "CAR",
              origin_country == "China, Hong Kong Special Administrative Region" ~ "Hong Kong",
              origin_country == "Lao People's Democratic Republic" ~ "Lao",
              origin_country == "Russian Federation" ~ "Russia",
              origin_country == "Syrian Arab Republic" ~ "Syria",
              origin_country == "Democratic Republic of the Congo" ~ "DRC",
              origin_country == "United Republic of Tanzania" ~ "Tanzania",
              origin_country == "United States of America" ~ "USA",
              origin_country == "United Arab Emirates" ~ "UAE",
              TRUE ~ as.character(origin_country)
          ),
         asylum_countryShort = case_when(
              asylum_country == "Venezuela (Bolivarian Republic of)" ~ "Venezuela" ,
              asylum_country == "United Kingdom of Great Britain and Northern Ireland" ~ "UK",
              asylum_country == "Bolivia (Plurinational State of)" ~ "Bolivia",
              asylum_country == "Central African Republic" ~ "CAR",
              asylum_country == "China, Hong Kong Special Administrative Region" ~ "Hong Kong",
              asylum_country == "Lao People's Democratic Republic" ~ "Lao",
              asylum_country == "Russian Federation" ~ "Russia",
              asylum_country == "Syrian Arab Republic" ~ "Syria",
              asylum_country == "Democratic Republic of the Congo" ~ "DRC",
              asylum_country == "United Republic of Tanzania" ~ "Tanzania",
              asylum_country == "United States of America" ~ "USA",
              asylum_country == "United Arab Emirates" ~ "UAE",
              TRUE ~ as.character(asylum_country)  
          )
         ) %>% 
  mutate(origin_countryShort = factor(origin_countryShort), 
         asylum_countryShort = factor(asylum_countryShort))

imputations <- imputations %>% 
   mutate(female = rowSums(select(., female_0_4:female_60)),
          male = rowSums(select(., male_0_4:male_60)),
          children = rowSums(select(., female_0_4:female_12_17, male_0_4:male_12_17)),
          adults = rowSums(select(., female_18_59, female_60, male_18_59, male_60)),
          childrenProp = children/total,
          femaleProp = female/total,
          origin_countryShort = case_when(
              origin_country == "Venezuela (Bolivarian Republic of)" ~ "Venezuela" ,
              origin_country == "United Kingdom of Great Britain and Northern Ireland" ~ "UK",
              origin_country == "Bolivia (Plurinational State of)" ~ "Bolivia",
              origin_country == "Central African Republic" ~ "CAR",
              origin_country == "China, Hong Kong Special Administrative Region" ~ "Hong Kong",
              origin_country == "Lao People's Democratic Republic" ~ "Lao",
              origin_country == "Russian Federation" ~ "Russia",
              origin_country == "Syrian Arab Republic" ~ "Syria",
              origin_country == "Democratic Republic of the Congo" ~ "DRC",
              origin_country == "United Republic of Tanzania" ~ "Tanzania",
              origin_country == "United States of America" ~ "USA",
              origin_country == "United Arab Emirates" ~ "UAE",
              TRUE ~ as.character(origin_country)
          ),
         asylum_countryShort = case_when(
              asylum_country == "Venezuela (Bolivarian Republic of)" ~ "Venezuela" ,
              asylum_country == "United Kingdom of Great Britain and Northern Ireland" ~ "UK",
              asylum_country == "Bolivia (Plurinational State of)" ~ "Bolivia",
              asylum_country == "Central African Republic" ~ "CAR",
              asylum_country == "China, Hong Kong Special Administrative Region" ~ "Hong Kong",
              asylum_country == "Lao People's Democratic Republic" ~ "Lao",
              asylum_country == "Russian Federation" ~ "Russia",
              asylum_country == "Syrian Arab Republic" ~ "Syria",
              asylum_country == "Democratic Republic of the Congo" ~ "DRC",
              asylum_country == "United Republic of Tanzania" ~ "Tanzania",
              asylum_country == "United States of America" ~ "USA",
              asylum_country == "United Arab Emirates" ~ "UAE",
              TRUE ~ as.character(asylum_country)  
          )
         ) %>% 
  mutate(origin_countryShort = factor(origin_countryShort), 
         asylum_countryShort = factor(asylum_countryShort))



### plot covariates against proportions of children and female

# Get the 9 largest origin_iso3 by total
top9_origin_iso3 <- dem_longMissing %>%
  group_by(origin_iso3) %>%
  summarize(total = sum(total)) %>%
  arrange(desc(total)) %>%
  top_n(9)


top4_origin_iso3 <- top9_origin_iso3 %>%
  top_n(4)


### origin / asylum plots ### 

## children
dem_longMissing_geoplots <- dem_longMissing %>% 
  filter(origin_iso3 %in% top4_origin_iso3$origin_iso3, missing == "none", total >=500)




### covariate plots ### 

dem_longMissing_plots <- dem_longMissing %>% 
  filter(origin_iso3 %in% top9_origin_iso3$origin_iso3, missing == "none", total >=50)


## gni
p.children.gni <- ggplot(data = dem_longMissing_plots,
       aes(x = gni_diff, y = childrenProp, colour = neighbor)) +
  geom_point(shape = 19, aes(size = total, alpha = 0.3)) +  # Add points to the plot
  scale_color_manual(values = c(unhcrPaletteBlue[3], unhcrPaletteBlack[1])) +
  facet_wrap(~ origin_country) + # Group the data by origin_iso3 
  scale_size(guide = "none") +
  scale_alpha(guide = "none")


p.female.gni <- ggplot(data = dem_longMissing_plots,
       aes(x = gni_diff, y = femaleProp, colour = neighbor)) +
  geom_point(shape = 19, aes(size = total, alpha = 0.3)) +  # Add points to the plot
  scale_color_manual(values = c(unhcrPaletteBlue[3], unhcrPaletteBlack[1])) +
  facet_wrap(~ origin_country) + # Group the data by origin_iso3
  scale_size(guide = "none") +
  scale_alpha(guide = "none")


p.children.loggni <- ggplot(data = dem_longMissing_plots,
       aes(x =logGniRatio, y = childrenProp, colour = neighbor)) +
  geom_point(shape = 19, aes(size = total, alpha = 0.3)) +  # Add points to the plot
  scale_color_manual(values = c(unhcrPaletteBlue[3], unhcrPaletteBlack[1])) +
  facet_wrap(~ origin_country) + # Group the data by origin_iso3 
  scale_size(guide = "none") +
  scale_alpha(guide = "none")


p.female.loggni <- ggplot(data = dem_longMissing_plots,
       aes(x = logGniRatio, y = femaleProp, colour = neighbor)) +
  geom_point(shape = 19, aes(size = total, alpha = 0.3)) +  # Add points to the plot
  scale_color_manual(values = c(unhcrPaletteBlue[3], unhcrPaletteBlack[1])) +
  facet_wrap(~ origin_country) + # Group the data by origin_iso3
  scale_size(guide = "none") +
  scale_alpha(guide = "none")

## distance

p.children.dist <- ggplot(data = dem_longMissing_plots,
       aes(x = distance, y = childrenProp, colour = neighbor)) +
  geom_point(shape = 19, aes(size = total, alpha = 0.3)) +  # Add points to the plot
  scale_color_manual(values = c(unhcrPaletteBlue[3], unhcrPaletteBlack[1])) +
  facet_wrap(~ origin_country, scales = "free_x") + # Group the data by origin_iso3
  scale_size(guide = "none") +
  scale_alpha(guide = "none")


p.female.dist <- ggplot(data = dem_longMissing_plots,
       aes(x = distance, y = femaleProp, colour = neighbor)) +
  geom_point(shape = 19, aes(size = total, alpha = 0.3)) +  # Add points to the plot
  scale_color_manual(values = c(unhcrPaletteBlue[3], unhcrPaletteBlack[1])) +
  facet_wrap(~ origin_country, scales = "free_x") + # Group the data by origin_iso3
  scale_size(guide = "none") +
  scale_alpha(guide = "none")


p.children.logdist <- ggplot(data = dem_longMissing_plots,
       aes(x = logDistance, y = childrenProp, colour = neighbor)) +
  geom_point(shape = 19, aes(size = total, alpha = 0.3)) +  # Add points to the plot
  scale_color_manual(values = c(unhcrPaletteBlue[3], unhcrPaletteBlack[1])) +
  facet_wrap(~ origin_country, scales = "free_x") + # Group the data by origin_iso3
  scale_size(guide = "none") +
  scale_alpha(guide = "none")


p.female.logdist <- ggplot(data = dem_longMissing_plots,
       aes(x = logDistance, y = femaleProp, colour = neighbor)) +
  geom_point(shape = 19, aes(size = total, alpha = 0.3)) +  # Add points to the plot
  scale_color_manual(values = c(unhcrPaletteBlue[3], unhcrPaletteBlack[1])) +
  facet_wrap(~ origin_country, scales = "free_x") + # Group the data by origin_iso3
  scale_size(guide = "none") +
  scale_alpha(guide = "none")


### plot missingness

# by origin region
t.oriregion.missingAge <- dem_longMissing %>% 
  group_by(missingAge,  origin_region) %>% 
  summarise(total = sum(total),
            children = sum(children),
            adults = sum(adults))




# by asylum region
t.asyregion.missingAge <- dem_longMissing %>% 
  group_by(missingAge,  asylum_region) %>% 
  summarise(total = sum(total)) %>% 
  mutate(totalProp = total/sum(total))


p.asyregion.missingAge <- ggplot(data = t.asyregion.missingAge,
                                                 aes(x = asylum_region, 
                                                     y = totalProp*100)) +
  geom_bar( stat="identity", fill = unhcrPaletteBlue[1]) +
  facet_wrap(~  missingAge,  scales = "fixed")



t.missing.asyregion <- dem_longMissing %>% 
  group_by(asylum_region, missingAge) %>% 
  summarise(total = sum(total),
            nOrigin = n_distinct(origin_country)) %>% 
  mutate(freq.totalEndYear = total/sum(total),
         freq.origin = nOrigin / sum(nOrigin)) %>%
  ungroup()

# missingness 
# example data
t.missing <- dem_longMissing %>% 
  group_by(missingAge) %>%
  summarise(
    `Number of refugees` = sum(total),
    `Number of country pairs` = n()
  ) %>%
    rename("Data availability" = missingAge) %>%
  mutate(`% of refugees` = round(`Number of refugees`/sum(`Number of refugees`)*100)) %>%
  select(`Data availability`, `Number of refugees`, `% of refugees`, `Number of country pairs`) 

# t.missing %>%
#   gt() 



```

# Demographic data on refugees

## Reporting process and data structure

UNHCR compiles official statistics on stocks and flows of forcibly displaced and stateless persons twice a year, once for mid-year figures (Mid-Year Statistical Reporting, MYSR) and once for end-year figures (Annual Statistical Reporting, ASR). For these reporting exercises, UNHCR's country offices compile aggregate population figures for refugees and asylum-seekers hosted in their country from a range of sources and data producers such as governments, UNHCR's own refugee registration database proGres and sometimes non-governmental actors. The geographic level on which theses statistics are being produced is therefore always the country country of asylum. The figures undergo a statistical quality control process at the country, regional and global level of the organisation and are disseminated on the publicly available refugee data finder [@refdata] after applying statistical disclosure control to suppress very small counts of persons that could identify individuals. The models and results presented in this paper use data only on the end-year stock of refugees under UNHCR's mandate (including others in need of international protection and refugee-like populations[^1], excluding Palestine refugees under UNRWA's mandate), that is, not on asylum-seekers, internally displaced persons and stateless persons.

[^1]: For better readability, we will refer to refugees, refugee-like populations and others in need of international protection as refugees throughout this text.

The end-year figures compiled with reporting date 31 December contain sex- and age breakdowns of the stocks refugees under UNHCR's mandate. The data is available by country of origin and country of asylum. The variables \[sex\]\_\[agebracket\] contain the counts of refugees as of 31 December 2021 in the individual sex and age brackets in the respective country pair. For example, *female_12_17* contains the number of female refugees aged 12 to 17. Variable *total* is the total number of refugees over all sex/age categories.

## Data gaps

Pre-defined sex-specific age brackets are 0-4, 5-11, 12-17, 18-59 and 60 years and older. For some origin/asylum combinations however, only the total end-year count without any demographic information is available. @tbl-data displays six rows of this dataset for illustration (age brackets other than 0-4 and 5-11 not shown for better readability).

```{r, message=FALSE, warning=FALSE}
#| label: tbl-data
#| tbl-cap: UNHCR end-2021 data
#| warning: false
#| error: false
#| echo: false
#| message: false
set.seed(1637)
dem_longMissing %>% 
  filter(total > 1000) %>%
  select(origin_iso3, asylum_iso3, missingAge, female_0_4, female_5_11, male_0_4, male_5_11, total) %>% 
  rename(origin = origin_iso3, asylum = asylum_iso3) %>%
  group_by(missingAge) %>%
  slice_sample(n = 3) %>%
  ungroup %>%
  gt() %>% 
  fmt_number(columns = 4:8, decimals = 0, use_seps = TRUE) %>%
  tab_options(table.font.size = "35%")
```

Since reporting of official figures is undertaken at the level of the country of asylum, the reasons for missingness of age- and sex-disaggregated data in UNHCR's official statistics are a function of statistical capacity and coordination in the country in which refugees are hosted. This might in many countries be a lack of priority or technical capacity to produce such disaggregated figures, or in some instances unwillingness to share detailed data. @tbl-missing provides an aggregate overview of missing age data in the dataset.

```{r, message=FALSE, warning=FALSE}
#| label: tbl-missing
#| tbl-cap: Missingness of age data
#| warning: false
#| error: false
#| echo: false
#| message: false
t.missing %>% 
  gt() %>%
  fmt_number(columns = 2:4, decimals = 0, use_seps = TRUE)
```

@fig-missingAsy shows for what proportion of the refugee population living in each region age-disaggregated data was available at the end of 2021. While demographic coverage is close to universal for refugees hosted in Africa, it is available for `r round(as.numeric( t.missing.asyregion |> filter(asylum_region == "Europe", missingAge=="Age not missing") |>select(freq.totalEndYear) )*100)` per cent of refugees in Europe, `r round(as.numeric( t.missing.asyregion |> filter(asylum_region == "Asia", missingAge=="Age not missing") |>select(freq.totalEndYear) )*100)` per cent in Asia and only for `r round(as.numeric( t.missing.asyregion |> filter(asylum_region == "Americas", missingAge=="Age not missing") |>select(freq.totalEndYear) )*100)` per cent in the Americas. This is to a large extent a result of the differing population data sources in these regions: While the individual demographic details of refugees in many countries in Africa and MENA are recorded in UNHCR's own case registration system proGres, population data in other regions often comes from government offices with varying degrees of availability of demographic data.

```{r, message=FALSE, warning=FALSE, out.width="80%", out.height="180%"}
#| label: fig-missingAsy
#| fig-cap: Missingness by region of asylum
#| fig-height: 6
#| fig-width: 6
#| warning: false
#| error: false
#| echo: false
#| message: false


p.asyregion.missing <- ggplot(data = t.missing.asyregion %>% 
                                                   filter(!is.na(asylum_region)),
                                                 aes(x = `missingAge`, 
                                                     y = freq.totalEndYear*100,
                                                     fill = `missingAge`)) +
  geom_bar( stat="identity", width = 0.8, position = position_dodge(width=0.8)) +
  scale_fill_manual(values=c(unhcrPaletteBlack[1], unhcrPaletteBlue[4])) +
  theme_minimal() +
  ylab("Percentage of refugees") +
  facet_wrap(~  `asylum_region`, ncol = 1, scales = "fixed") +
  theme(axis.text.y = element_blank(),
        axis.text.x = element_text(size = 13),
    #    plot.title = element_text(hjust = 0.5),
        axis.title.y = element_blank(),
        axis.title.x = element_text(size = 13),
    strip.text = element_text(size = 13)) +
     #   panel.grid.major.x = element_blank()) +
    theme(legend.title = element_blank(), legend.position = "right") +
    coord_flip() 

p.asyregion.missing
```

UNHCR has in the past typically reported the sex/age breakdown in the available data as global and regional aggregates of the demographic distribution of all refugees. By reporting the observed demographic distribution as the sex/age structure of the entire refugee population including the part without available data, we are assuming that the `r t.missing[t.missing$"Data availability"=="Age missing",]$"% of refugees"` per cent for whom no age information was available at the end of 2021 have the same age distribution as the ones with available data. It is difficult to check this very strong assumption of ignorability of the missing data without further information on the sex/age distribution in the missing part of the data. We can however compare the distribution of other, fully available variables between refugees with and without demographic information. If such variables can be assumed to be correlated with the sex/age distribution at least to some extent, this can give us an indication whether the ignorability assumption is likely to be justified or not.

In particular, we can look at the distribution of data availability by country and region of asylum, and we can furthermore compare the distribution of origins of refugees in the observed and the unobserved part of the population. If missingness of demographic data was entirely random and thus ignorable, we would expect the geographic origins of refugees to be similar in the observed and the unobserved part of the demographic data, that is, we would see a similar distribution of origin countries.

```{r, message=FALSE, warning=FALSE, out.width="100%", out.height="120%"}
#| label: fig-missingOri
#| fig-cap: Missingness by origin region
#| warning: false
#| error: false
#| echo: false
#| message: false
p.oriregion.missingAge1 <- ggplot(data = t.oriregion.missingAge %>%
                                   filter(origin_region!="Oceania", missingAge == "Age not missing") %>% 
                                    pivot_longer(cols = c(children, adults), names_to = "age", values_to = "value"),
                                                 aes(x = origin_region, 
                                                     y = value, 
                                                     fill = age)) +
  geom_bar(stat="identity") +
  scale_fill_manual(values=c(unhcrPaletteBlue[1], unhcrPaletteGreen[1])) +
  ggtitle("Age data available") +
  labs(y = "Number of refugees")  +
  ylim(c(NA,5000000)) +
  theme(legend.title = element_blank(), legend.position = "bottom") +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 10, angle = 45),
        axis.text.y = element_text(size = 13),
        plot.title = element_text(hjust = 0.5),
        axis.title.x = element_blank(),
        axis.title.y = element_text(size = 13),
        panel.grid.major.x = element_blank()) 
  


p.oriregion.missingAge2 <- ggplot(data = t.oriregion.missingAge %>%
                                   filter(origin_region!="Oceania", missingAge == "Age missing") ,
                                                 aes(x = origin_region, 
                                                     y = total)) +
  geom_bar(stat = "identity", colour = unhcrPaletteBlack[1], fill = unhcrPaletteWhite[1], alpha = 0,
           size = 1, linetype = "solid")  +
  ggtitle("Age data missing") +
 # labs(y = "Number of refugees")  +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 10, angle = 45),
        axis.text.y = element_blank(),
        plot.title = element_text(hjust = 0.5),
        axis.title.x =  element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major.x = element_blank()) +
  scale_y_continuous(labels = label_number(scale_cut = cut_si("m")))
  

p.oriregion.missingAge <- p.oriregion.missingAge1  + p.oriregion.missingAge2 + plot_layout(guides = "collect") & theme(legend.position = "bottom", legend.title = element_blank(), legend.text = element_text(size=10))  &  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale()), limits = c(NA,11000000)) & theme(title = )


p.oriregion.missingAge
```

@fig-missingOri shows the distribution of refugees by origin regions separately for the two subsets of the global refugee population with and without age-disaggregated data. The most common origin regions are Sub-Africa and Asia for refugees with available demographic information.Those without demographic data availability have most commonly fled from countries in the Americas and Asia. The left part of the graph shows that in the available data, the proportion of children is lower in these two regions. This provides a first indication that refugees with available sex/age-disaggregated data have different demographics from those without such data, and that we cannot simply assume the same demographic distribution between these two groups. The varying missingness in the data across regions of origin is indirectly related to the way demographic data is more available for countries of asylum in Africa and Asia: Since 72 per cent of refugees are hosted in neighbouring countries of asylum (Global Trends 2021), it is not surprising to see better data availability not only for refugees in, but also for those from these regions.

The fact that the distribution of origins of refugees for whom demographic data is missing differs from those with available data would not necessarily be an issue for global and regional estimates of the poportion of children among refugees if that proportion did not differ much between countries and regions of origin. @fig-childrenOriAsy displays the proportion of children in each country of asylum (each dot is one origin/asylum population, only shown for populations of at least 500 refugees with available age-disaggregated data) for the four largest origin countries at the end of 2021. Each of the four countries of origin has its own distinct distribution of the proportion of children among refugees in different countries of asylum: Refugees from South Sudan have very high proportions of children across countries of asylum in Africa, while the percentage of children among Venezuelans residing primarily in South American countries is mostly below 30 per cent. This is not very surprising: even without seeing the data, we would expect populations from the same origin country to have at least in many cases similar demographic distributions due to the same or comparable reasons and periods of displacement and fertility patterns. There is more variability across countries of asylum for refugee populations displaced from Afghanistan. Additionally, we can observe a clustering of the proportions by region of asylum for each country of origin. For example, there is a relatively clear pattern of Syrian refugees in Asian countries having higher proportions of children than those living in African and European countries of asylum.

```{r, message=FALSE, warning=FALSE, out.width="100%", out.height="150%"}
#| label: fig-childrenOriAsy
#| fig-cap: Proportion of children among refugees in each country of asylum by country of origin (dot size is proportional to number of refugees in the country of origin/asylum pair)
#| warning: false
#| error: false
#| echo: false
#| message: false

p.top4.children.ori.asy <-  ggplot(data = dem_longMissing_geoplots,
       aes(x = origin_countryShort, y = childrenProp*100, colour = asylum_region)) +
  geom_point(shape = 19, aes(size = total, alpha = 0.3)) +  # Add points to the plot
  scale_color_manual(values = c(unhcrPaletteBlue[3], unhcrPaletteGreen[1], unhcrPaletteRed[1], unhcrPaletteBlack[1])) +
  scale_size(guide = "none") +
  scale_alpha(guide = "none") +
  labs(x = "Origin country", y="Percentage of children\nin country of asylum") +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 10, angle = 0),
        axis.text.y = element_text(size = 13),
        axis.title.x = element_text(size = 9),
        axis.title.y = element_text(size = 10),
        panel.grid.major.x = element_blank()) +
    theme(legend.title = element_text(size = 10), legend.position = "top") +
  guides(fill = guide_legend(title.position = "top", title.hjust=0.5)) +
    annotate("text", x = 3.6, y = 55, label = "Syrian refugees\nin Türkiye", size = 3.5) +
    labs(colour = "Region of asylum") +
#    theme(legend.title.align = "center") +
  geom_curve(
    data =   tibble(
    x1 = c(3.6),
    x2 = c(3.1),
    y1 = c(50), 
    y2 = c(45.3)), aes(x = x1, y = y1, xend = x2, yend = y2),
    arrow = arrow(length = unit(0.08, "inch")), size = 0.6,
    color = "gray20", curvature = -0.3)

 p.top4.children.ori.asy
```

@fig-childrenDist shows the proportion of children as a function of the distance between country of origin and country of asylum for the nine largest refugee producing countries. Dots for countries of asylum that neighbour the respective origin country are blue. The proportion of children by and large decreases for countries of asylum that are further away, and it is higher for neighbouring countries.

```{r, message=FALSE, warning=FALSE}
#| label: fig-childrenDist
#| fig-cap: Proportion of children among refugees for nine large refugee origins by distance to country of asylum (dot size is proportional to number of refugees in the country of origin/asylum pair)
#| fig-height: 11
#| fig-width: 8
#| out-width: "100%"
#| out-height: "100%"
#| warning: false
#| error: false
#| echo: false
#| message: false

p.children.logdist <- ggplot(data = dem_longMissing_plots,
       aes(x = logDistance, y = childrenProp*100, colour = neighbor)) +
  geom_point(shape = 19, aes(size = total, alpha = 0.3)) +  # Add points to the plot
  scale_color_manual(values = c(unhcrPaletteBlue[3], unhcrPaletteBlack[1])) +
  facet_wrap(~ origin_country, scales = "free_x") + # Group the data by origin_iso3
  scale_size(guide = "none") +
  scale_alpha(guide = "none") +
  labs(x = "Distance (log)", y="Percentage of children\nin country of asylum", colour = "Neighbouring\ncountry") +
#  theme_minimal() +
  theme(axis.text.x = element_text(size = 10, angle = 0),
        axis.text.y = element_text(size = 13),
        axis.title.x = element_text(size = 9),
        axis.title.y = element_text(size = 10),
        panel.grid.major.x = element_blank()) +
    theme(legend.title = element_text(size = 10), legend.position = "bottom") 

 p.children.logdist
```

# Model

Considering the findings of the descriptive analysis with considerable differences in the distribution of countries of origin and asylum between refugees with and without available data, and the explanatory power of origins and countries of asylum for the demographic characteristics of refugee populations, ignoring the missing data (i.e. treating it as if it was the same as the available data) risks introducing bias into regional and global estimates of the proportion of refugee children. In the following, we propose a model to predict counts for the age/sex brackets of those country pairs with missing demographic data (the *NAs* in @tbl-data), which in turn will allow us to estimate regional and global proportions of children. Summarising the descriptive analysis of missingness and available age data, there are three main conclusions to be considered in predicting the proportion of children for refugee populations without available age data:

1.  We cannot assume the global proportion of children among refugees for whom demographic data is available is the same as the proportion we would see if data was available for populations with currently missing data.\
2.  Knowing which country of origin refugees are from gives us some information regarding the proportion of children we would expect. For example, looking at @fig-childrenOriAsy we would generally assume that there is a higher proportion of children in a refugee population from South Sudan than in refugees from Venezuela.\
3.  For each origin population, knowing which region of asylum a population is from can help us refine the estimate for the proportion of children based on the country of origin. If we know a population is from Syria and they reside in a country of asylum in Europe, we would assume the proportion of children to be lower than if they were living in a country in Asia.

When presented with the task of predicting the percentage of children among refugees in a country of asylum A from country of origin C, in the absence of any other information it would intuitively make sense to use the global proportion of children among refugees from that country for whom we have demographic data, i.e. to use data on populations from C from other countries of asylum. We can go further and only use data on refugees from C for countries of asylum in the same geographic region as A, making use of the clustering of proportions seen in @fig-childrenOriAsy. While this procedure works for origins with a sufficient number of countries with available data in all world regions, in some cases we will encounter country pairs with missing data for which there is little or no data available for the same origin in the same region. In these cases, the next best option would be to use the global mean of the proportion of children for that origin country, or, if there is little data even across all countries of asylum, to fall back to the global mean from all origin countries. There are also going to be mix cases, where only data from a low number of countries of asylum in the same region with low population sizes is available. While we do not want to discard such data for the same origin entirely, it would make sense to additionally use data from countries of asylum in other regions for the same origin to avoid relying entirely on little and potentially unreliable data.

Multilevel models (also called hierarchical, or sometimes random effect, models) are well suited to pool information across geographic levels as described above. We fit a multilevel model with varying nested intercepts at the levels of country of origin, region of asylum and country of asylum. Since the data is available as aggregated counts in ten age/sex brackets that sum up to the population total, we choose a multinomial distribution to model the underlying probabilities of a refugee falling in each of the age/sex brackets depending on their country of origin and country of asylum. When estimating these probabilities, the model treats populations from the same origin country as being more similar to each other than those from different origins, and for each origin considers those residing in countries in the same region of asylum as more similar than those in different regions of asylum. We fit the model in a Bayesian framework that allows us to incorporate uncertainty in parameters and in predictions from those parameters in the final predictions.

For each refugee population $i$ with a total of $n_{i}$ people from country of origin $c$ in country of asylum $a$ in region $r$, we want to predict the vector of counts in the ten age/sex brackets $y_{i} = (y_{1,i},...,y_{k,i},...y_{10,i})$ ($y_{1,i}$ is the count of girls in the 0-4 age bracket, $y_{2,i}$ are girls in the 5-11 bracket, $y_{5,i}$ are women aged 60 and older, $y_{6,i}$ are boys aged 0-4 and so on). $y_{i}$ follows a multinomial distribution: $$y_{i}\sim M(n_{i},\pi_{i})$$ {#eq-multinomial} We fit a multilevel multinomial logit model to estimate from observed age/sex data the vector of probabilities $\pi_{i} = (\pi_{1,i},...,\pi_{k,i},...\pi_{10,i})$ expressing the probability of a refugee falling in age/sex bracket $k$ given their country of origin, country and region of asylum and whether they live in a country neighbouring their origin country: $$log(\frac{\pi_{k,i}}{\pi_{4,i}}) = \eta_{k,i} = \beta_{k,0}+\beta_{k,neighbor}+b_{k,c}+b_{k,c:r}+b_{k,c:r:a}$$ {#eq-linpred} where the counts of the 4th age/sex bracket, women aged 18-59, are the reference category (therefore $\pi_{4,i}$ in the logit denominator). The subscripts for the varying intercept of region and country of asylum, c:r and c:r:a, indicate nesting within country of origin c (and country of asylum within region of asylum), meaning there are no crossed intercepts of region and country of asylum over countries of origin.  The $\pi_{k}$ sum up to one: $$\sum_{k=1}^{10}\pi_{k,i}=1$$ {#eq-simplex} We use the following priors for the model parameters, where $\Pi_{k}$ is the proportion of the global population in that age/sex group in 2021 (UN DESA 2022): $$\beta_{k,0}\sim N(log(\frac{\Pi_{k}}{\Pi_{4}}),1)$$ {#eq-beta0} $$\beta_{k,neighbor}\sim t(7,0,2.5)$$ {#eq-beta1} $$sd(b_{k,c})\sim t(5,0,2.5)$$ {#eq-sdCoO} $$sd(b_{k,c:r})\sim t(7,0,2.5)$$ {#eq-sdRoA} $$sd(b_{k,c:r:a})\sim N(0,0.01)$$ {#eq-sdCoA}

The prior on the global intercepts with the $log(\frac{\Pi_{k}}{\Pi_{4}})$ mean aims to provide sensible levels for the age/sex bracket proportions. It incorporates our prior belief that, for example, it is unlikely that all refugees in a country are girls aged 0 to 4, but otherwise is not overly narrow. The student-t priors on the group-level standard deviations of the intercepts of country of origin and region of asylum are not informative and only serve to regularise the parameter space. The prior on country of origin is slightly wider to allow less pooling (i.e. closer to a separate model for each country of origin) and thereby take into consideration the general idea of the model that age/sex distributions are idiosyncratic to populations of an origin country. The very narrow $N(0,0.01)$ prior on standard deviation of the country of asylum term $b_{k,a}$ merits further discussion: Including the term might seem unusual to start with since in most cases there is only one observation in the form of age/sex counts and total (i.e. one row in the dataset) per country of origin/asylum to start with (exception are countries in Latin America and the Caribbean with two populations displaced from Venezuela, refugees and others in need of international protection). On one hand, leaving out this parameter leads to overconfidence in predicting counts in country pairs with missing data since in that case the counts are drawn from the varying intercepts of the regions (which are observed in the data in most country of origin/region of asylum pairs), ignoring the uncertainty that comes with predicting a whole new country pair not used in fitting the model. On the other hand, allowing a wider standard deviation leads to unreasonably wide prediction intervals (sometimes including counts of zero children in populations of several thousand refugees). Restricting the prior by way of a very small standard deviation helps us constrain the predictive intervals to sensible ranges. We include a fixed effect for neighbouring country pairs since @fig-childrenDist shows that we can on average expect higher proportions of children among refugee populations in neighbouring countries of asylum. Additional covariates such as the distance and GNI difference between country of asylum and origin would be interesting additions to the model, but were left out for this version since they led to too high a number of parameters and difficulties in convergence of the Markov chains used to sample from the posterior distribution. 

To predict the count vector of age/sex brackets $\tilde{y_{i^{*}}}$ for a country pair $i^{*}$ without reported data and account for uncertainty of parameters $\theta$ and prediction, we draw for each country pair with missing data $m$ values from the posterior predictive distributions: $$p(\tilde{y_{i^{*}}} \mid y)
= 
\int p(\tilde{y_{i^{*}}} \mid \theta) \cdot p(\theta \mid y)
\, \textrm{d}\theta$$ {#eq-postpred}

We can then analyse the $m$ posterior draws $y_{j,i^{*}}$ ($j=1,...,m$) descriptively and calculate for example uncertainty intervals and location parameters to estimate regional and global proportions of age groups such as children. We will call each of the $m$ draws of values for the missing part of the dataset an imputation.

For the group-level varying intercept of region of asylum, we choose a modified version of the SDG regional groupings in which some of the sub-groups are aggregated. The choice of region groups is somewhat arbitrary but also important because, for regions with little available reported data for a country of origin, the exact regional definition becomes influential for the distribution of the draws from the posterior predictions of country-level parameters. With the modified SDG groups, we try to create groups that are neither too small nor too big and, crucially, contain comparable countries of asylum. @tbl-sdgregions summarises these regions including refugee population sizes with missing and available age data. 

```{r, message=FALSE, warning=FALSE}
#| label: tbl-sdgregions
#| tbl-cap: Regional groupings and number of refugees with missing and available age data
#| warning: false
#| error: false
#| echo: false
#| message: false

t.sdgregions <- dem_longMissing %>% 
    group_by(asylum_sdgregion, missingAge ) %>%
    summarise(`# refugees` = sum(total), `# country pairs` = n()) %>% ungroup() %>%
    pivot_wider(id_cols = asylum_sdgregion, names_from = missingAge, values_from = c(`# refugees`), values_fill = 0, names_sort = T, names_sep = "-") %>% select(asylum_sdgregion,`Age not missing`, `Age missing` )

t.sdgregions %>%
  rename(`Region` = asylum_sdgregion,
         `Age available` = `Age not missing`) %>%
  gt() %>%
  fmt_number(columns = 2:3, decimals = 0, use_seps = TRUE)

```

The model was fit with R-package brms [@brms]. Reproducible code is available [here](https://github.com/sebastiansteinmueller/ref-demographics-imputation/){.external target="_blank"}. Annex I contains the model summaries. 

# Results

```{r}
##### predictions ##### 


### by country of origin

## identify 3 large populations with missing age/sex data
t.dem.ageMissingTop9 <- dem_longMissing %>%
  ungroup() %>%
  filter(missing == "sexAge")%>%
  slice_max(total, n=9)
  
t.dem.ageMissingPlots <- dem_longMissing  %>% 
  filter(origin_iso3 == "VEN" & asylum_iso3 == "PER" & popType=="VDA" | origin_iso3 == "VNM" & asylum_iso3 == "CHN" |  origin_iso3 == "SYR" & asylum_iso3 == "SWE")

t.imp.ageMissingPlots <- imputations %>% 
  filter(origin_iso3 == "VEN" & asylum_iso3 == "PER" & popType=="VDA" | origin_iso3 == "VNM" & asylum_iso3 == "CHN" |  origin_iso3 == "SYR" & asylum_iso3 == "SWE")

# show for ifms
imputations.slides <- imputations %>% filter(imputation %in% c(1,2,3) & (origin_iso3 == "VEN" & asylum_iso3=="BOL" &popType == "VDA" | origin_iso3 == "SOM" & asylum_iso3=="UGA" | origin_iso3=="IDN" & asylum_iso3 == "PNG")) %>% arrange(origin_iso3, imputation) %>% select(imputation, origin_country, asylum_country, female_0_4:total)

#write.csv(imputations.slides, "ifms/imputations.slides.csv")

## Syria
# plot of uncertainty (full posterior distribution) 
# y: histogram
# x: proportion of female over imputations
# group: country of asylum

imputations.syr <- imputations %>% 
  filter(origin_iso3 == "SYR") 

dem.syr.select <- dem_longMissing %>% filter(origin_iso3=="SYR", asylum_iso3 %in% c("SWE", "USA",  "LBN", "JOR", "GBR"))

p.imputations.syr.female  <- ggplot(data = imputations.syr %>% filter(asylum_iso3 %in% c("SWE", "USA",    "LBN", "JOR", "GBR")),
      aes(y=reorder(asylum_country, femaleProp), x=femaleProp)) +
     stat_halfeye() +
  theme_minimal()


p.imputations.syr.reg.female <- ggplot(data = imputations.syr,
      aes(y=reorder(asylum_country, femaleProp), x=femaleProp)) +
     stat_gradientinterval() +
  facet_wrap(~ asylum_region, scales = "fixed")






### by region of asylum


t.dem.asyreg.female <- dem_longMissing %>% 
  filter(!is.na(female)) %>%
  group_by(asylum_region) %>% 
  summarise(female = sum(female), total = sum(total)) %>% 
  mutate(femaleProp = female/total)

imputations.asyreg <- imputations %>% 
  group_by(imputation, asylum_region) %>% 
  summarise(children = sum(children), female = sum(female), total = sum(total)) %>% 
  ungroup() %>%
  mutate(childrenProp = children/total,
         femaleProp = female/total) %>% 
  ungroup()



t.imp.asyreg.female <- imputations.asyreg %>% 
  group_by(asylum_region) %>% 
  summarise(femaleProp = mean(femaleProp), lowerUI = quantile(femaleProp, probs = 0.025), upperUI = quantile(femaleProp, probs = 0.975)) %>% 
  left_join(t.dem.asyreg.female %>% select(asylum_region, femaleProp), by = "asylum_region", suffix = c(".imputed", ".availableData"))

## Venezuela 
imputations.ven <- imputations %>% 
  filter(origin_iso3 == "VEN") 


### world

t.dem.female <- dem_longMissing %>% 
  filter(!is.na(female)) %>%
  summarise(female = sum(female), total = sum(total)) %>% 
  mutate(femaleProp = female/total)


t.imp.female <- imputations %>% 
  group_by(imputation) %>% 
  summarise(children = sum(children), female = sum(female), total = sum(total)) %>% 
  mutate(childrenProp = children/total,
         femaleProp = female/total) %>% 
  ungroup() %>%
summarise(femaleMeanProp = mean(femaleProp), 
              lowerUI = quantile(femaleProp, probs = 0.025), 
              upperUI = quantile(femaleProp, probs = 0.975)
    )

```

## Global and regional estimates

```{r, message=FALSE, warning=FALSE}
#| label: tbl-estimates
#| tbl-cap: Regional and global model estimates for the proportion of children
#| warning: false
#| error: false
#| echo: false
#| message: false

t.dem.asyreg.children <- dem_longMissing %>% 
  filter(!is.na(children)) %>%
  group_by(asylum_region) %>% 
  summarise(children = sum(children), total = sum(total)) %>% 
  mutate(childrenProp = children/total)

t.imp.asyreg.children <- imputations.asyreg %>% 
  group_by(asylum_region) %>% 
  summarise(childrenMeanProp = mean(childrenProp), 
            lowerUI = quantile(childrenProp, probs = 0.025), 
            upperUI = quantile(childrenProp, probs = 0.975)
            ) %>% 
  left_join(t.dem.asyreg.children %>% select(asylum_region, childrenProp), by = "asylum_region", suffix = c(".imputed", ".availableData")) 


t.dem.children <- dem_longMissing %>% 
  filter(!is.na(children)) %>%
  summarise(children = sum(children), total = sum(total)) %>% 
  mutate(childrenProp = children/total)


t.imp.children <- imputations %>% 
  group_by(imputation) %>% 
  summarise(children = sum(children), female = sum(female), total = sum(total)) %>% 
  mutate(childrenProp = children/total,
         femaleProp = female/total) %>% 
  ungroup() %>%
summarise(childrenMeanProp = mean(childrenProp), 
              lowerUI = quantile(childrenProp, probs = 0.025), 
              upperUI = quantile(childrenProp, probs = 0.975)
    )


t.world.children <- tibble(
  asylum_region = "WORLD",
  childrenMeanProp = t.imp.children$childrenMeanProp,
  lowerUI = t.imp.children$lowerUI,
  upperUI = t.imp.children$upperUI,
  childrenProp = t.dem.children$childrenProp
)


t.worldregion.children <- bind_rows(t.imp.asyreg.children, t.world.children) %>%
  select(asylum_region, childrenProp, childrenMeanProp, lowerUI, upperUI) %>% 
  mutate(across(where(is.double),~.*100 ))

t.worldregion.children %>% 
  gt() %>%
  fmt_number(columns = 2:5, decimals = 1) %>%
  tab_options(table.font.size = "40%") %>%
  cols_label(asylum_region = md("Region"),
         childrenProp=  md("% available data"),
        childrenMeanProp =md("% estimated" ) ,
       lowerUI  =md("Lower 95% CI") ,
        upperUI =md("Upper 95% CI")) %>% 
    tab_style(
    style = cell_borders(
      sides = c("right"),
      color = "	#c1cdcd",
      weight = 0.7,
      style = "dashed"
    ),
    locations = cells_body(
      columns = 2,
      rows = everything()
    )
  ) %>% 
    tab_style(
    style = cell_borders(
      sides = c("right"),
      color = "	#c1cdcd",
      weight = 0.7,
      style = "dashed"
    ),
locations = cells_column_labels(
      columns = 2
    )
  )


    
```

@tbl-estimates shows the percentage of children among refugees living in the five major world regions estimated with imputations from the model and compares them to the percentage we obtain using the available data only. The global estimate for the proportion of children drops by almost `r round(as.numeric( t.worldregion.children |> filter(asylum_region == "WORLD") |>select(childrenProp) )-as.numeric( t.worldregion.children |> filter(asylum_region == "WORLD") |>select(childrenMeanProp ) ))` per cent, from `r round(as.numeric( t.worldregion.children |> filter(asylum_region == "WORLD") |>select(childrenProp ) ))` per cent to `r round(as.numeric( t.worldregion.children |> filter(asylum_region == "WORLD") |>select(childrenMeanProp) ))` per cent, when using the imputed dataset. The 95% uncertainty interval for the global point estimate ranges from `r round(as.numeric( t.worldregion.children |> filter(asylum_region == "WORLD") |>select(lowerUI) ),1)` to `r round(as.numeric( t.worldregion.children |> filter(asylum_region == "WORLD") |>select(upperUI) ),1)` per cent and does not include the available-data figure of `r round(as.numeric( t.worldregion.children |> filter(asylum_region == "WORLD") |>select(childrenProp ) ))` per cent. This indicates the standardisation by origins and regions of asylum through the model is relevant, and previously disseminated figures for the proportion of refugees who are children were most likely overestimates. Most of the decrease from the available-data to the modelled estimates is due to the fact that the latter uses data on all refugees residing in Europe and the Americas with lower proportions of children. 
Regional estimates from the imputed data are below the available-data figures with narrow uncertainty intervals for all regions apart from Oceania. The available-data figures in Oceania are based on only 1,209 refugees with reported data. The model pools the low estimate from this small dataset towards the global means for each origin, resulting in the comparatively large increase compared toe the available-data estimate.  When interpreting the width of the uncertainty intervals, it is important to keep in mind that only predicted (formerly missing) counts vary over the imputations, but age/sex counts for country pairs with reported data are fixed over the imputations and do therefore not add to uncertainty. This means that regions like Africa with a low proportion of missing data have very few country pairs with imputed data and therefore have narrow uncertainty intervals.    


## Uncertainty checks for country level predictions

To assess whether the model estimates uncertainty sensibly, we can look at the range of predictions at country-pair level. @fig-impChildSyr shows the distribution of the proportion of children over the 200 imputed datasets among Syrian refugees in four countries of asylum without reported data. The posterior predictive distributions are relatively wide, with the 95% posterior predictive interval for the proportion of children among Syrians in the USA ranging from 15 per cent to 43 per cent. This is a desirable property of the models since, in the absence of reported data on an origin population in a country of asylum, we would not be confident in overly narrow prediction intervals. This is also the reason why it is not recommended to disseminate point estimates of demographic proportions in country pairs with imputed values. Showing uncertainty intervals, or even better the full posterior predictive distirbution, is necessary to provide a sense of the range of plausible values. The same recommendation holds for analysis on the level of country of origin (aggregating over countries of asylum for an origin), country of asylum. Generally, the country-pair level imputations with high uncertainty are best understood as building blocks to be used to aggregate up to and estimate demographic proportions and their uncertainty in regions of asylum and origin. The imputation dataset comes with iso3 codes for countries of asylum and origin that allow to easily create any regional grouping. 

```{r, fig.pos = "H"}
#| label: fig-impChildSyr
#| fig-cap: Uncertainty in posterior predictive distribution of the proportion of children among Syrian refugees in four countries of asylum
#| warning: false
#| error: false
#| echo: false
#| message: false

p.imputations.syr.children <- ggplot(data = imputations.syr %>% filter(asylum_iso3 %in% c("SWE", "USA",    "GBR", "GRC")),
      aes(y=reorder(asylum_countryShort, childrenProp), x=childrenProp*100)) +
     stat_slab() +
  labs(x = "Percentage of children") +
  theme_minimal() +
    theme(axis.text.x = element_text(size = 11, angle = 0),
        axis.text.y = element_text(size = 11),
        axis.title.x = element_text(size = 11),
        axis.title.y = element_blank(),
        panel.grid.major.y = element_blank())
  
p.imputations.syr.children
```

@fig-impChildVen shows the same plot for Venezuelans in four South American countries. The distributions for the proportion of children among Venezuelans in Ecuador and Argentina are much narrower than for those in Brazil and Chile, or for Syrians in any of the countries shown above. In contrast to many other countries, demographic data is available in Argentina and Ecuador for some Venezuelan populations, leading to narrower prediction range in these countries.  

```{r, fig.pos = "H"}
#| label: fig-impChildVen
#| fig-cap: Uncertainty in posterior predictive distribution of the proportion of children among Venezuelan refugees in four countries of asylum
#| warning: false
#| error: false
#| echo: false
#| message: false

p.imputations.ven.children <- ggplot(data = imputations.ven %>% filter(asylum_iso3 %in% c("ARG", "ECU", "CHL", "BRA"), popType=="VDA"),
      aes(y=reorder(asylum_countryShort, childrenProp), x=childrenProp*100)) +
     stat_slab() +
  labs(x = "Percentage of children") +
  theme_minimal() +
    theme(axis.text.x = element_text(size = 11, angle = 0),
        axis.text.y = element_text(size = 11),
        axis.title.x = element_text(size = 11),
        axis.title.y = element_blank(),
        panel.grid.major.y = element_blank())
  
p.imputations.ven.children
```

@fig-impChildSyrReg shows the distribution of reported (point only) and predicted (intervals) proportions of children among Syrian refugees in all countries by world region. Demographic data is reported from all countries in Africa and there is consequently no uncertainty in data from these countries. In Oceania in contrast, no age data on Syrian refugees was reported at all, leading to very large uncertainty intervals for Australia and New Zealand. The sub-regional groupings used in the model (see @tbl-sdgregions) are clearly visible in the plot panel for Europe, where estimates for countries with missing data are split into the two subgroups within the larger Europe region. Conditional on country of origin and the neighbour indicator, the main determinant of the central location of the posterior predictive distribution of the proportion of children in any one country of asylum is the region that country is in. In other words, @fig-impChildSyrReg is a visualisation of the two main functions of the model: To standardise global and regional counts by origin countries and regions of asylum, and to provide a measure of uncertainty coming from both model parameters and predictions in the imputed dataset. 


```{r, fig.pos = "H"}
#| label: fig-impChildSyrReg
#| fig-cap: Uncertainty in posterior predictive distribution of the proportion of children among Syrian refugees across regions
#| fig-height: 12.5
#| fig-width: 8
#| warning: false
#| error: false
#| echo: false
#| message: false
p.imputations.syr.reg.children <- ggplot(data = imputations.syr,
    aes(y=reorder(asylum_countryShort, childrenProp), x=childrenProp*100)) +
    stat_pointinterval() +
  labs(x = "Percentage of children") +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 13, angle = 0),
      axis.text.y = element_blank(),
      axis.title.x = element_text(size = 16),
      axis.title.y = element_blank(),
      panel.grid.major.y = element_blank()) +
  facet_wrap(~ asylum_region, scales = "free", ncol = 2) +
  theme(strip.text = element_text(size = 16),
        panel.spacing = unit(2, "lines"))
  


p.imputations.syr.reg.children

```


# Limitations

While the imputed dataset is useful in estimating regional and global estimates of the age/sex distribution of refugees, the modelling approach is top-down and uses only geographic proximity and regional groupings as a means to improve available-data figures. It cannot substitute data collected and compiled at the national level. If the main goal is to obtain reliable estimates of the demographic characteristics of refugees on the level of country of asylum, strengthening the production process of official statistics on refugees in said country should be the primary course of action. Recommendations and implementation examples developed by countries in the framework of the Expert Group on Refugee, IDP and Statelessness Statistics (see EGRISS 2018) can provide helpful guidance to national statistical systems. Projecting populations from census, survey or administrative data on age/sex structure, fertility, mortality and displacement are another way to obtain more reliable estimates of the age/sex distribution at country level, although this requires much more effort for a single country and is therefore better suited if estimates for a specific country are required. Estimates from the imputed dataset at any geographical level should always be disseminated and communicated with uncertainty intervals or by showing the posterior predictive distribution over imputations. While care has been taken to include and test prior assumptions and hierarchical geographic structures to model uncertainty from parameters and predictions, we made a blanket assumption that all available age/sex data was measured without uncertainty and without measurement error. This is an over-simplification. For example, counts for age/sex brackets on Afghan refugees in Iran reported by UNHCR for end-2021 are outputs of a demographic projection model with its own uncertainty, however these counts are included without variance in the current version of the imputation model. While it would be possible to include estimates of uncertainty for the available part of the age/sex data, this would be technically more challenging and lead to more complex models. It might also be institutionally more difficult since, at least to date, most global datasets such as the one on refugee demographics have been disseminated without measures of uncertainty. 

# Discussion

With the revised estimate for the proportion of children among refugees of `r round(as.numeric( t.worldregion.children |> filter(asylum_region == "WORLD") |>select(childrenMeanProp) ),0)` per cent being significantly lower than the available-data figure of `r round(as.numeric( t.worldregion.children |> filter(asylum_region == "WORLD") |>select(childrenProp) ),0)` per cent and in light of the bias in the available data shown in the descriptive analysis, we recommend use of the imputed dataset where the estimation of regional and global figures of age/sex brackets is the goal of an analysis of UNHCR's official refugee data. The imputed dataset is also suitable for analysis on the level of country of asylum or country of origin, however, in these cases particular care should be taken to analyse and communicate uncertainty over the imputations, for example by disseminating interval- instead of point estimates. The imputed dataset contains iso-3 codes for countries of origin and asylum, allowing for straightforward aggregation over custom regions and country groupings as required by an analyst. Since UNHCR's official population dataset has the same format year-on-year, fitting the same model and creating an imputed dataset from its posterior predictive distribution can be repeated for future publications of the ASR data.  

While it would seem logical to use the same approach to estimate proportions of children (or other demographic groups) among asylum-seekers and IDPs, the models do not lend themselves naturally to these datasets: The proportion of missing demographic data is much higher among these groups, and the uncertainty in estimating parameters and predicting new values from such sparse datasets would lead to high uncertainty over imputations. For example, age/sex data was only available in 13 out of 35 countries reporting IDPs at end-2021. For IDPs, an additional challenge is the lack of a geographical country of origin/asylum structure as for refugees. Country-by-country demographic projections using additional data such as from censuses and household surveys seem therefore a more promising modelling approach to estimate the age/sex structure for IDPs. 

# References

::: {#refs}
:::

# Annex I: Model output
```{r}
#| label: tbl-model_fixed
#| tbl-cap: Model - fixed effects
#| warning: false
#| error: false
#| echo: false
#| message: false
m.ageonly.sum <- summary(m.ageonly)


m.ageonly.fixedsum <- m.ageonly.sum$fixed  %>% 
  rownames_to_column() %>% 
  select(rowname, Estimate, Est.Error, `l-95% CI`,   `u-95% CI`) %>%
  rename(Coef = rowname)

m.ageonly.fixedsum %>% 
  gt() %>%
  fmt_number(columns = 2:5, decimals = 2) 


```
  
```{r}
#| label: tbl-model_re1
#| tbl-cap: Model - origin country group level standard deviation 
#| warning: false
#| error: false
#| echo: false
#| message: false
 m.ageonly.sum$random [1]$origin_iso3 %>% 
  rownames_to_column() %>% 
  as_tibble() %>% 
  select(rowname, Estimate, Est.Error, `l-95% CI`,   `u-95% CI`) %>%
  rename(Coef = rowname) %>% 
  gt() %>%
  fmt_number(columns = 2:5, decimals = 2) 


```
  
```{r}
#| label: tbl-model_re2
#| tbl-cap: Model - asylum region group level standard deviation 
#| warning: false
#| error: false
#| echo: false
#| message: false
 m.ageonly.sum$random [2]$`origin_iso3:asylum_sdgregion` %>% 
  rownames_to_column() %>% 
  as_tibble() %>% 
  select(rowname, Estimate, Est.Error, `l-95% CI`,   `u-95% CI`) %>%
  rename(Coef = rowname) %>% 
  gt() %>%
  fmt_number(columns = 2:5, decimals = 2) 

```

```{r}
#| label: tbl-model_re3
#| tbl-cap: Model - asylum country group level standard deviation 
#| warning: false
#| error: false
#| echo: false
#| message: false
 m.ageonly.sum$random [3]$`origin_iso3:asylum_sdgregion:asylum_iso3` %>% 
  rownames_to_column() %>% 
  as_tibble() %>% 
  select(rowname, Estimate, Est.Error, `l-95% CI`,   `u-95% CI`) %>%
  rename(Coef = rowname) %>% 
  gt() %>%
  fmt_number(columns = 2:5, decimals = 2) 

```
